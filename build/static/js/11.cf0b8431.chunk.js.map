{"version":3,"sources":["utils/tools.js","pages/apiManagement/index.jsx"],"names":["paramsFormat","params","data","i","undefined","Option","select_default","a","Page","connect","state","form_default","create","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","createApiManagement","deleteApiManagement","handleSearch","e","preventDefault","dispatch","form","validateFields","err","fieldsValue","type","payload","onCurrentChange","current","pages","columns","title","dataIndex","key","render","text","record","react_default","createElement","onClick","divider_default","getFieldDecorator","_this$props$apiManage","apiManagement","dataSource","totalCount","loading","className","breadcrumb_default","Item","onSubmit","layout","label","input_default","placeholder","value","button_default","htmlType","icon","ghost","router","to","table_default","rowKey","index","pagination","pagination_default","size","total","Number","showSizeChanger","showQuickJumper","onShowSizeChange","onChange","Component"],"mappings":"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","file":"static/js/11.cf0b8431.chunk.js","sourcesContent":["/*参数处理*/\nconst paramsFormat = (params) => {\n    let data = params;\n    if(typeof data === \"object\"){\n        for (let i in data){\n            if(data[i] === undefined||data[i] === ''){\n                delete data[i];\n            }\n        }\n    }\n    return data;\n};\nexport {\n    paramsFormat,\n}\n","import React, { Component } from 'react';\nimport { Breadcrumb, Form, Table, Input, Button, Select, Pagination, Divider} from 'antd';\nimport { Link } from 'dva/router';\nimport { connect } from 'dva';\nimport { paramsFormat } from \"utils/tools\";\nimport './index.less';\nconst Option = Select.Option;\n@connect(state=>state)\n@Form.create()\nclass Page extends Component{\n    constructor(props){\n        super(props);\n        this.columns = [\n            {title: '序号', dataIndex: 'index',key:'index'},\n            {title: '接口名称', dataIndex: 'name',key:'name'},\n            {title: '请求方式', dataIndex: 'method',key:'method'},\n            {title: '路由地址', dataIndex: 'path',key:'path'},\n            {title: '参数', dataIndex: 'params',key:'params'},\n            {title: '关联表', dataIndex: 'table',key:'table'},\n            {title: 'SQL语句', dataIndex: 'sql',key:'sql'},\n            {\n                title: '操作', dataIndex: 'action',key:'action',\n                render:(text, record)=>(\n                    <span>\n                      <span onClick={()=>this.createApiManagement(record)}>编辑</span>\n                      <Divider type=\"vertical\" />\n                      <span onClick={()=>this.deleteApiManagement(record)}>删除</span>\n                    </span>\n                )\n            },\n        ];\n    }\n    componentDidMount(){\n        const { dispatch } = this.props;\n        dispatch({\n            type:'apiManagement/getApiManagementList',\n        });\n    };\n    /*新增*/\n    createApiManagement = () =>{\n\n    };\n    /*删除*/\n    deleteApiManagement = () =>{\n\n    };\n\n    /*列表查询*/\n    handleSearch = (e) => {\n        e.preventDefault();\n        const { dispatch } = this.props;\n        this.props.form.validateFields((err, fieldsValue) => {\n            const params = paramsFormat(fieldsValue);\n            dispatch({\n                type:'apiManagement/getApiManagementList',\n                payload:params\n            });\n        });\n    };\n    /*分页条*/\n    onCurrentChange = (current,pages) =>{\n        const { dispatch } = this.props;\n        this.props.form.validateFields((err, fieldsValue) => {\n            dispatch({\n                type:'apiManagement/getApiManagementList',\n                payload:{}\n            });\n        });\n    };\n    render(){\n        const { getFieldDecorator } = this.props.form;\n        const {dataSource,totalCount,loading} = this.props.apiManagement;\n        return (\n            <div className='container'>\n                <div className='wrapper'>\n                    <Breadcrumb>\n                        <Breadcrumb.Item>主页</Breadcrumb.Item>\n                        <Breadcrumb.Item>API管理</Breadcrumb.Item>\n                    </Breadcrumb>\n                </div>\n                <div className='wrapper'>\n                    <Form  onSubmit={this.handleSearch} className=\"login-form\" layout=\"inline\">\n                        <Form.Item label=\"接口名称\">\n                            {getFieldDecorator('name')(\n                                <Input  placeholder=\"请输入接口名称\" />\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"请求方式\">\n                            {getFieldDecorator('method')(\n                                <Select placeholder=\"请选择请求方式\" className=\"chanel-select\">\n                                    <Option value=\"get\">GET</Option>\n                                    <Option value=\"post\">POST</Option>\n                                    <Option value=\"put\">PUT</Option>\n                                    <Option value=\"delete\">DELETE</Option>\n                                </Select>\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"路径\">\n                            {getFieldDecorator('path')(\n                                <Input  placeholder=\"请输入请求路径\" />\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"reset\">重置</Button>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">查询</Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n                <div className='wrapper'>\n                    <Button icon=\"file-add\" type=\"primary\" ghost>\n                        <Link to='/apiManagement/details'> 新增接口</Link>\n                    </Button>\n                </div>\n                <div className='wrapper'>\n                    <Table\n                        rowKey={record => record.index}\n                        columns={this.columns}\n                        dataSource={dataSource}\n                        loading={loading}\n                        pagination={false}\n                    />\n                </div>\n                <div className='wrapper'>\n                    <Pagination\n                        size=\"small\"\n                        total={Number(totalCount)}\n                        showSizeChanger\n                        showQuickJumper\n                        onShowSizeChange={this.onCurrentChange}\n                        onChange={this.onCurrentChange}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\nexport default Page;\n"],"sourceRoot":""}