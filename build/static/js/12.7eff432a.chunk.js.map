{"version":3,"sources":["pages/apiManagement/details.jsx"],"names":["Option","antd_lib_select__WEBPACK_IMPORTED_MODULE_16___default","a","TextArea","apiManagementDetails","handleSubmit","dispatch","_this","props","form","validateFields","err","fieldsValue","type","payload","getFieldDecorator","this","react__WEBPACK_IMPORTED_MODULE_17___default","createElement","className","antd_lib_breadcrumb__WEBPACK_IMPORTED_MODULE_7___default","Item","dva_router__WEBPACK_IMPORTED_MODULE_18__","to","antd_lib_form__WEBPACK_IMPORTED_MODULE_5___default","onSubmit","label","rules","required","message","antd_lib_input__WEBPACK_IMPORTED_MODULE_14___default","palaceholder","placeholder","value","extra","rows","antd_lib_button__WEBPACK_IMPORTED_MODULE_3___default","ghost","antd_lib_divider__WEBPACK_IMPORTED_MODULE_1___default","htmlType","Component","WrappedSearchForm","create","connect","state"],"mappings":"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","file":"static/js/12.7eff432a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Breadcrumb, Form, Input, Select, Button, Divider} from 'antd';\nimport { Link } from 'dva/router';\nimport { connect } from 'dva';\nimport './index.less';\nconst Option = Select.Option;\nconst { TextArea } = Input;\nclass apiManagementDetails extends Component{\n    handleSubmit = () => {\n        const { dispatch } = this.props;\n        this.props.form.validateFields((err, fieldsValue) => {\n            if(err){\n                return;\n            }\n            dispatch({\n                type:'apiManagement/createApiManagement',\n                payload:fieldsValue\n            });\n        });\n    };\n    render(){\n        const { getFieldDecorator } = this.props.form;\n        return(\n            <div>\n                <div className='container'>\n                    <div className='wrapper'>\n                        <Breadcrumb>\n                            <Breadcrumb.Item>主页</Breadcrumb.Item>\n                            <Breadcrumb.Item>\n                                <Link to='/apiManagement'> API管理</Link>\n                            </Breadcrumb.Item>\n                            <Breadcrumb.Item>API管理新增</Breadcrumb.Item>\n                        </Breadcrumb>\n                    </div>\n                    <div className='wrapper'>\n                        <div className=\"form-wrapper\">\n                            <Form onSubmit={this.handleSubmit}>\n                                <Form.Item\n                                    label=\"接口名称\"\n                                >\n                                    {getFieldDecorator('name', {\n                                        rules: [{\n                                            required: true, message: '请输入接口名称!',\n                                        }],\n                                    })(\n                                        <Input palaceholder=\"请输入接口名称\"/>\n                                    )}\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"请求方式\"\n                                >\n                                    {getFieldDecorator('method', {\n                                        rules: [{\n                                            required: true, message: '请选择请求方式!',\n                                        }],\n                                    })(\n                                        <Select placeholder=\"请选择请求方式\">\n                                            <Option value=\"get\">GET</Option>\n                                            <Option value=\"post\">POST</Option>\n                                            <Option value=\"put\">PUT</Option>\n                                            <Option value=\"delete\">DELETE</Option>\n                                        </Select>\n                                    )}\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"路由地址\"\n                                >\n                                    {getFieldDecorator('path', {\n                                        rules: [{\n                                            required: true, message: '请输入路由地址!',\n                                        }],\n                                    })(\n                                        <Input  palaceholder=\"请输入路由地址\"/>\n                                    )}\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"参数\"\n                                >\n                                    {getFieldDecorator('params', {\n                                        rules: [{ required: false, message: '请输入参数!' }]\n                                    })(\n                                        <Input  palaceholder=\"请输入关参数\"/>\n                                    )}\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"关联表\"\n                                >\n                                    {getFieldDecorator('table', {\n                                        rules: [{ required: true, message: '请输入关联表!' }]\n                                    })(\n                                        <Input  palaceholder=\"请输入关联表\"/>\n                                    )}\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"SQL\"\n                                    extra=\"sql查询语句，支持egg和sql语言\"\n                                >\n                                </Form.Item>\n                                <Form.Item>\n                                    {getFieldDecorator('sql', {\n                                        rules: [{ required: false, message: '请输入sql查询语句!' }],\n                                    })(\n                                        <TextArea rows={6} palaceholder=\"请输入sql查询语句\"/>\n                                    )}\n                                </Form.Item>\n                                <Form.Item >\n                                    <Button type=\"primary\" ghost>\n                                        <Link to='/apiManagement'>取消</Link>\n                                    </Button>\n                                    <Divider type=\"vertical\" />\n                                    <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst WrappedSearchForm = Form.create()(apiManagementDetails);\nexport default connect((state)=>(state))(WrappedSearchForm);\n"],"sourceRoot":""}